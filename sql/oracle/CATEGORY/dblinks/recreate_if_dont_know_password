
DBMS_METADATA.GET_DDL for 'DB_LINK' Always Returns BY VALUES ':1' (Doc ID 1912244.1)	To BottomTo Bottom	

In this Document
Symptoms
Changes
Cause
Solution
References

APPLIES TO:
Oracle Database - Enterprise Edition - Version 11.2.0.4 and later
Oracle Database Exadata Cloud Machine - Version N/A and later
Oracle Cloud Infrastructure - Database Service - Version N/A and later
Oracle Database Cloud Exadata Service - Version N/A and later
Oracle Database Exadata Express Cloud Service - Version N/A and later
Information in this document applies to any platform.
SYMPTOMS
In versions earlier than 11.2.0.4, DBMS_METADATA.get_ddl for 'DB_LINK'  would return encrypted password for values in identified by clause. So the returning command could be run successfully to recreate the db link in some other database.

Starting 11.2.0.4, DBMS_METADATA.get_ddl for 'DB_LINK'  would return ':1' for values in identified by clause.

eg.

On 11.2.0.1:
=========

SQL> create database link db11201 connect to vp identified by vp using 'ORCL';
SQL> set long 1000000 linesize 1000 pagesize 0 feedback off trimspool on verify off serveroutput on
SQL> select dbms_metadata.get_ddl('DB_LINK','DB11201.VP.COM') from dual;

 CREATE DATABASE LINK "DB11201.VP.COM"
  CONNECT TO "VP" IDENTIFIED BY VALUES '05755352C6B78A96D8B47A8557DE0E2A08'
  USING 'ORCL'

On 11.2.0.4:
=========

SQL> create database link db11204 connect to vp identified by vp using 'ORCL';
SQL> set long 1000000 linesize 1000 pagesize 0 feedback off trimspool on verify off serveroutput on
SQL> select dbms_metadata.get_ddl('DB_LINK','DB11204') from dual;

 CREATE DATABASE LINK "DB11204"
  CONNECT TO "VP" IDENTIFIED BY VALUES ':1'
  USING 'ORCL'

CHANGES
 None

CAUSE
Bug 18461318 was opened for this issue which is closed as not feasible to fix as this behavior was introduced to fix the security bug.

SOLUTION
The bug is not feasible to fix. So the workarounds are:

1. Use actual password in returned DDL:

  IDENTIFIED BY VALUES :1
by
  IDENTIFIED BY current_dblink_password

2. If the password for db link is unknown then use datapump exp/imp using include=db_link

e.g.

E.g.

- create a parfile with the database link that you need to export:

INCLUDE=DB_LINK:"LIKE 'TEST01'"

- run the export

#> expdp system/password dumpfile=link.dmp content=metadata_only parfile=parfile.par full=y


- run the import

#> impdp system/password dumpfile=link.dmp logfile=link.log full=y

