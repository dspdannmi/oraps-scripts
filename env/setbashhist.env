
history -a
history -c

now=$(date +%Y%m%d%H%M%S)

shopt -s histappend

#
# \! is the history number of this command
# \# is the command number of this command
# There is a discrepancy between these two as depending on settings for history
# duplicates etc. are not counted in the history.  Thus if you execute "ls -al" once and then 
# immediately again and again for a total of three times, if it is set such that ignoredups then
# the history number will increment only by one (1) but the command number will increment by 
# three (3)
# Note that it also refers to the number of the command prior to it executing so when the history
# number or the command number is showin in PS1 on the prompt, it signifies that the next command
# entered will have those numbers, it's not referring to commands already executed
# It is the history/command number of the _next_ command, not the immediately previously executed
# command
#

export PS1='[dsp:h\!:c\#] \u@\h \D{%Y%m%d:%H%M%S}] [${ORACLE_SID}] \$ '
export HISTTIMEFORMAT='%F %T '

OLDHISTFILE=${HISTFILE}

export HISTDIR=/home/oracle/.history
export HISTFILE=${HISTDIR}/history.${now}.${$}

# touch the HISTFILE to avoid a scenario whereby the history isn't written - and remember it only
# gets flushed at termination of session or other infrquent intervals thus if you switch to root
# and the shell gets written it will get created as the root owner and thus not have permissions
# to write but the original user (eg. oracle)
touch ${HISTFILE}

echo
echo "old HISTFILE: ${OLDHISTFILE}"
echo "new HISTFILE: ${HISTFILE}"
echo

# ensure history is written to HISTFILE after every command is executed
# note that it's not just "history -a" but the fact it is in PROMPT_COMMAND environment
# setting which causes this command to be run at each shell prompt
# history -a appends to shell history
PROMPT_COMMAND="history -a"
