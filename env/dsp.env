

#
# ---------------------------------------------------------
# set initial important environment variables
#
# CS_TOP was an original name for this set of scripts (CS=[C]ool[S]tuff) but
# should gradually switch around to DSP_TOP.  Hence for now DSP_TOP is just
# being set to CS_TOP
export CS_TOP=/opt/dsp
export DSP_TOP=${CS_TOP}

export WORKDIR_TOP=${HOME}/DSP/work

export today=$(date +%Y%m%d)
export todayfull=$(date +%Y%m%d_%H%M)

#
# these will be a duplicate on a clone
[ -r /etc/machine-id ] && export machine_id=$(cat /etc/machine-id)
export hostid=$(hostid)

export EXITCODE=0
export SHOW_FOOTER_ON_EXIT=NO	# otherwise will get footers on everything 
export WARN_ON_NONZERO_EXIT=YES

if [ "${BASH_SOURCE}" != "" ] && [ "${0}" != "-bash" ]	# $0 empty if being sourced as opposed to running from within script
then
    scriptname=$(basename $0)
    tmpfile=$(mktemp -u -t ${scriptname}_${$}.XXXXXXXX)	 # -u option is unsafe but we will also add scriptname and PID to tmpfile
							 # when used in scripts so very low risk close to none of any collisions
fi

#export TOPDIR=/home/XXXXXX	
export SQL=${DSP_TOP}/sql/oracle


export DSP_DATADIR=${DSP_TOP}/config/dsp
export DSP_IDENTITY_FILE=${DSP_DATADIR}/identity.txt
export DSP_OWNER_FILE=${DSP_DATADIR}/owner.txt
export SERVERCODE_LOOKUP_FILE=${DSP_DATADIR}/servercodelookup.txt
export DBHOSTING_LOOKUP_FILE=${DSP_DATADIR}/dbhostinglookup.txt
export DSP_VERSION_FILE=${DSP_DATADIR}/version.txt
export dspversion

#
# Oracle Database
#
ORAADMIN_DIRS=="adump bdump cdump dpdump udump adhoc create pfile xdb_wallet"

export REMSHCMD="ssh"

unset dspversion
unset servercode
if [ -r ${DSP_IDENTITY_FILE} ]
then
    dspserverid="$(grep -i ^dspserverid: ${DSP_IDENTITY_FILE} | cut -d: -f2 | xargs)"		# xargs to trim whitespace

    servercode="$(grep -i ^servercode: ${DSP_IDENTITY_FILE} | cut -d: -f2 | xargs)"		# xargs to trim whitespace
    server_type=$(grep ^${servercode}: ${SERVERCODE_LOOKUP_FILE} | cut -d: -f2-) 

    dbhostingstatuscode="$(grep -i ^dbhostingstatus: ${DSP_IDENTITY_FILE} | cut -d: -f2 | xargs)"		# xargs to trim whitespace
    dbhostingstatus="$(grep -i ^${dbhostingstatuscode}: ${DBHOSTING_LOOKUP_FILE} | cut -d: -f2 | xargs)"		# xargs to trim whitespace
else
    : # no server identity file found
fi

if [ -r ${DSP_VERSION_FILE} ]
then
    dspversion=$(head ${DSP_VERSION_FILE} | awk '{print $1}' | xargs)

    if [ "${dspversion}" = "" ] 
    then
        unset dspversion 
    fi
else
    : # this is not good as means something is not right but not enough to raise it in a script
      # the interactive setenv should raise this
fi

export ORAENV=/usr/local/bin/oraenv
export ORATAB=/etc/oratab

case "${OSTYPE}" in
    solaris*)	export ORATAB=/var/opt/oracle/oratab ;;
    linux*)     export ORATAB=/etc/oratab ;;
    *)          echo "WARNING: unknown OSTYPE - please raise DSP enhancement request" ;;
esac

#
#----------------------------------------------------------
#

#only required if we could autoload functions which bash does not offer
#export FPATH=${DSP_TOP}/functions:${FPATH}


export PROD_HOSTS=""

export ORACLE_OWNER=oracle		# the owner and group of Oracle software
export ORACLE_GROUP=dba

export SQLPLUS_DBA_LOGON="/ as sysdba"

export SQLPLUS_LINESIZE=${SQLPLUS_LINESIZE:-140}
export SQLPLUS_PAGESIZE=${SQLPLUS_PAGESIZE:-80}
    
    
#if [ -z "${CS_ENV_SET}" ] || [ "${CS_ENV_SET}" = "NO" ]
#then
export CS_ENV_SET=YES

export ORAENV_ASK=NO


#
# update PATH
#
# directories are appended to beginning of PATH so you want
# the paths listed in the "for pathdir in  ..." line to be
# in reverse order of how they should appear in PATH
for pathdir in  /bin \
	/usr/local/bin \
	/usr/local/sys/bin \
	${DSP_TOP}/dbscripts/oracle/SHELLSQL/scripts \
	${DSP_TOP}/dbscripts/oracle \
	${DSP_TOP}/scripts \
	${DSP_TOP}/bin \
        ${DSP_TOP}/local/bin \
        ${DSP_TOP}/local/scripts \
#	${DSP_TOP}/PROD/dbscripts/oracle/SHELLSQL \
#	${DSP_TOP}/PROD/dbscripts/oracle \
#	${DSP_TOP}/PROD/scripts \
#	${DSP_TOP}/PROD/bin 
do
case "$PATH" in
 *$pathdir:*)	;;
 *:$pathdir*)	;;
 *)		export PATH=${pathdir}:${PATH}
		    ;;
esac
done

export PATH=$(echo $PATH | sed -e 's/^://g')	# remove leading :


#
# update SQLPATH
#
# directories are appended to beginning of SQLPATH so you want
# the paths listed in the "for pathdir in  ..." line to be
# in reverse order of how they should appear in SQLPATH

for pathdir in  ${DSP_TOP}/sql/oracle ${DSP_TOP}/local/sql/oracle
do
case "$SQLPATH" in
 *$pathdir:*)   ;;
 *:$pathdir*)   ;;
 *)             export SQLPATH=${pathdir}:${SQLPATH}
                    ;;
esac
done

export SQLPATH=$(echo $SQLPATH | sed -e 's/^://g')	# remove leading :

export ORACLE_PATH=${SQLPATH}


# end of script
    
