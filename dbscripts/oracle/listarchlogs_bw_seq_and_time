#!/bin/bash

#+++___________________________________________________________________________________
#
#
# Script name:                  genccf
#
# Description:			Generate a CREATE CONTROFILE script to standard output
#
# Parameters:			1	(optional)	SID
#
# Environment:
#
# Return codes:
#
# Modification history:
#
#       14-Jan-2004     1.0     oracle    Original version
#
#+++___________________________________________________________________________________

CS_TOP=${CS_TOP:-/opt/dsp}
. ${CS_TOP}/env/dsp.env
. ${CS_TOP}/env/funcs.sh

USAGE_STRING="[-d SID] sequence_begin end_time"



if [ $# -gt 4 ]
then
    usage
fi

if [ "$1" = "-d" ]
then
    export ORACLE_SID=$(echo ${2} | awk -F: '{print $1}')

    whichhost=$(echo ${2} | awk -F: '{print $2}' | tr "[:upper:]" "[:lower:]")

    if [ "${whichhost}" = "" ] || [ "${whichhost}" = "${HOSTNAME}" ]
    then
        whichhost=${HOSTNAME}

        if chkoradbinoratab ${ORACLE_SID}
        then
            :
        else
            echo "ERROR: ${ORACLE_SID} not in oratab"
            EXITCODE=1
            exit ${EXITCODE}
        fi

        . /usr/local/bin/oraenv 2>&1 > /dev/null
    fi

    shift
    shift
else
    whichhost=${HOSTNAME}
fi

sequence_start=$1
end_time=$2

if [ $# -ne 2 ]
then
    usage
fi


if [ "${ORACLE_SID}" = "" ]
then
    echo ERROR: ORACLE_SID not set
    exit 1
fi


if [ "$whichhost" = "${HOSTNAME}" ]
then
    if chkorainstsysdba ${ORACLE_SID}
    then
        :
    else
        echo ERROR: ${ORACLE_SID} is not up
        exit 1
    fi

sequence_start=$1
end_time=$2

sqlplus -s ${SQLPLUS_DBA_LOGON} << *EOF* 2>&1
set pages 0
set lines 500
set feedback off
col name format a400
select name
from v\$archived_log
where sequence# >= ${sequence_start} and first_time <= to_date('${end_time}', 'YYYYMMDDHH24MI')
  and standby_dest != 'YES'
order by sequence#;
exit
*EOF*
status=$?

if [ $status -ne 0 ]
then
    echo ERROR: Encountered error when running $EXECUTABLE
    EXITCODE=1
fi

else
    runremotecmd ${whichhost} $(which ${scriptname}) -d ${ORACLE_SID} ${sequence_start} ${end_time}
    status=$?

      if [ $status -ne 0 ]
      then
          echo "ERROR: Encountered error running remote command"
          EXITCODE=1
      fi
fi

exit $EXITCODE

